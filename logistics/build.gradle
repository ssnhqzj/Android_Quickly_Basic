apply plugin: 'com.android.application'

android {
    signingConfigs {
        qzj {
            keyAlias 'qzj_key'
            keyPassword '345412682@qq.com'
            storeFile file('E:/key/qzj.jks')
            storePassword '345412682'
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "com.qzj.logistics"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.qzj
        }
    }
    sourceSets { main { jni.srcDirs = ['src/main/jni', 'src/main/jni/', 'src/main/jniLibs'] } }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def newName = '';
            if (variant.buildType.name.equals('release')) {
//                println(variant.productFlavors[0].name)//该name是productFlavors中的pro_release可用于命名
                def releaseApkName = 'logistics-'+ getVersionNameFromManifest() + '"-"' + getDate() + '-release.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
//            if(variant.buildType.name.equals('beta')){
////                newName = oldFile.name.replace(".apk", "-v" + getVersionNameFromManifest() + "-beta" + getDate() + ".apk")
//                 newName =  'GJT_PRO-' + getVersionNameFromManifest() + '"-"' + getDate() + '-beta.apk'
//                output.outputFile = new File(oldFile.parent, newName)
//            }
            if (variant.buildType.name.equals('debug')) {

            }
        }
    }
}

//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}
//从androidManifest.xml中获取版本号
def getVersionNameFromManifest(){
    def manifestParser = new com.android.builder.core.DefaultManifestParser()
    return manifestParser.getVersionName(android.sourceSets.main.manifest.srcFile)
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile project(':viewPagerIndicator')
    compile files('libs/fastjson-1.1.34.jar')
    compile 'com.google.zxing:core:3.2.0'
    compile project(':okhttputils')
    compile files('libs/ormlite-android-4.47.jar')
    compile files('libs/ormlite-core-4.47.jar')
    compile 'de.greenrobot:eventbus:2.4.0'
    compile files('libs/RemotePrinter.jar')
    compile project(':AnyVersion')
}
